自主导航模块测试说明

集成测试1
测试过程：
1.在gazebo启动ros机器人仿真
2.将地图构建得到的地图按三种情况放入map文件夹中
(1) map.yaml和map.pgm不在指定map文件夹中
(2) map.yaml和map.pgm在map文件夹中，且内容为空
(3) map.yaml和map.pgm在map文件夹中，且内容为建图模块生成的地图
3.启动nav导航模块
4.观察nav控制台信息
5.退出

测试结果：
出发点	到达点	实际输出				完成状态
(0, 0)	(4.8, 3.0)	Arrived at WayPoint[0]!		位置与实际位置基本重合	所预期的
(4.8, 3.0)	(2.4, 3.2)	Arrived at WayPoint[1]!		位置与实际位置基本重合	所预期的
(2.4, 3.2)	(-3.5, -2.2)	Arrived at WayPoint[2]!	位置与实际位置基本重合	所预期的
(-3.5, -2.2)(3.4, -4.8)	Arrived at WayPoint[3]!	位置与实际位置基本重合	所预期的
(3.4, -4.8)	(1.2, -3.2)		Failed to get a plan		机器人原地自转		遇到问题

问题说明：
点(1. 2, -3.2)与沙发位置重合，导航模块无法对不可到达点进行路径规划

集成测试2
测试过程：
1.在gazebo启动ros机器人仿真，将地图文件放入map文件夹中
2.启动nav导航模块，点击2D Nav Goal按钮选择目的地，拖动绿色箭头设置机器人到达目的地时的朝向
3.Rviz界面输出一条规划后的淡紫色路径
4.观察路径是否为可到达目的地的最优路径
5.退出

测试结果：
出发点	到达点	实际输出			完成状态
(0, 0)	(2, 0)	Arrived at WayPoint[0]!	位置与实际位置基本重合	所预期的
(2, 0)	(-4, -5.6)	Arrived at WayPoint[1]!	位置与实际位置有偏差桌子与机器人发生位移	遇到问题
(1.1, 3)	(-3.5, -2.2)	Arrived at WayPoint[2]!	位置与实际位置基本重合	所预期的

问题说明：
地图建立时雷达无法扫描到高度信息，即桌子上方边沿无法检测到，只能检测到桌子的四角，导致本不应该到达的点可以到达，造成地图上原有物体的位移

